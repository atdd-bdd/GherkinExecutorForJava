package gherkinexecutor.Feature_Tic_Tac_Toe_Game;
import java.util.*;
import java.net.URL;
import java.util.regex.Pattern;
import java.math.BigInteger;
 import static org.junit.jupiter.api.Assertions.*;
import java.util.List;

class Feature_Tic_Tac_Toe_Game_glue {


    void Given_board_is(List<List<String>> values ) {
        System.out.println("---  " + "Given_board_is");
        for (List<String> value : values){
           System.out.println(value);
              }
        fail("Must implement");
    }

    void When_move_is(List<Move> values ) {
        System.out.println("---  " + "When_move_is");
        for (Move value : values){
           System.out.println(value);
                try {
                MoveInternal i = value.toMoveInternal();
                  System.out.println(i);
                      }
                     catch(Exception e){
                         System.err.println("Argument Error " + value.toString() + MoveInternal.toDataTypeString());
                         }
              }
        fail("Must implement");
    }

    void Then_board_is_now(String value ) {
        System.out.println("---  " + "Then_board_is_now");
        System.out.println(value);
        fail("Must implement");
    }

    void When_one_move_is(List<List<String>> values ) {
        System.out.println("---  " + "When_one_move_is");
        for (List<String> value : values){
           System.out.println(value);
              }
        fail("Must implement");
    }

    void When_moves_are(List<Move> values ) {
        System.out.println("---  " + "When_moves_are");
        for (Move value : values){
           System.out.println(value);
                try {
                MoveInternal i = value.toMoveInternal();
                  System.out.println(i);
                      }
                     catch(Exception e){
                         System.err.println("Argument Error " + value.toString() + MoveInternal.toDataTypeString());
                         }
              }
        fail("Must implement");
    }

    }
