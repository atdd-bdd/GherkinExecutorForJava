package gherkinexecutor.Feature_Tables_and_Strings;
import java.util.*;
import static org.junit.Assert.fail;
import static org.junit.jupiter.api.Assertions.assertEquals;
import java.util.List;
import java.io.FileWriter;
import java.io.IOException;

class Feature_Tables_and_Strings_glue {
void log(String value) {
    try {
        FileWriter myLog = new FileWriter("src/test/java/gherkinexecutor/Feature_Tables_and_Strings/log.txt", true);
        myLog.write(value + "\n");
        myLog.close();
    } catch (IOException e) {
    System.err.println("*** Cannot write to log ");
    }
    }


    void Star_A_multiline_string_to_a_string(String value ) {
        System.out.println("---  " + "Star_A_multiline_string_to_a_string");
        log("---  " + "Star_A_multiline_string_to_a_string");
        log(value.toString());
        System.out.println(value);
    }

    void Star_A_multiline_string_to_a_List_of_String(List<String> values ) {
        System.out.println("---  " + "Star_A_multiline_string_to_a_List_of_String");
        log("---  " + "Star_A_multiline_string_to_a_List_of_String");
        log(values.toString());
        for (String value : values){
           System.out.println(value);
              }
    }

    void Star_A_table_to_List_of_List_of_String(List<List<String>> values ) {
        System.out.println("---  " + "Star_A_table_to_List_of_List_of_String");
        log("---  " + "Star_A_table_to_List_of_List_of_String");
        log(values.toString());
        for (List<String> value : values){
           System.out.println(value);
              }
    }

    void Star_A_table_to_List_of_Object(List<ExampleClass> values ) {
        System.out.println("---  " + "Star_A_table_to_List_of_Object");
        log("---  " + "Star_A_table_to_List_of_Object");
        log(values.toString());
        for (ExampleClass value : values){
           System.out.println(value);
              }
    }

    void Star_A_table_to_List_of_Object_with_Defaults(List<ExampleClass> values ) {
        System.out.println("---  " + "Star_A_table_to_List_of_Object_with_Defaults");
        log("---  " + "Star_A_table_to_List_of_Object_with_Defaults");
        log(values.toString());
        for (ExampleClass value : values){
           System.out.println(value);
              }
    }

    void Star_A_table_to_List_of_Object_with_Blanks_in_Name(List<ExampleClassWithBlanks> values ) {
        System.out.println("---  " + "Star_A_table_to_List_of_Object_with_Blanks_in_Name");
        log("---  " + "Star_A_table_to_List_of_Object_with_Blanks_in_Name");
        log(values.toString());
        for (ExampleClassWithBlanks value : values){
           System.out.println(value);
              }
    }

    void Star_A_table_to_String(String value ) {
        System.out.println("---  " + "Star_A_table_to_String");
        log("---  " + "Star_A_table_to_String");
        log(value.toString());
        System.out.println(value);
    }

    }
